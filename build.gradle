plugins {
    id 'java'
    id 'org.springframework.boot' version '2.7.2'
    id 'io.spring.dependency-management' version '1.0.15.RELEASE'
    id 'jacoco'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

repositories {
    mavenCentral()
}


java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-jetty'  // Tomcat 대신 Jetty 사용
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'

    // DB
    //runtimeOnly 'com.mysql:mysql-connector-j'
    implementation 'mysql:mysql-connector-java'

    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'

    // Test
    testImplementation("org.springframework.boot:spring-boot-starter-test")
    //testImplementation("org.springframework.boot:spring-boot-testcontainers")
    //testImplementation("org.testcontainers:junit-jupiter")
    //testImplementation("org.testcontainers:mysql")
    testRuntimeOnly("org.junit.platform:junit-platform-launcher")

    implementation 'io.jsonwebtoken:jjwt:0.9.1' // 최신 버전을 확인하고 사용하세요

}

java {
    sourceCompatibility = JavaVersion.VERSION_11
    targetCompatibility = JavaVersion.VERSION_11
}

// Jacoco 설정
jacoco {
    toolVersion = '0.8.7'
}

// bundling tasks
tasks.getByName("bootJar") {
    enabled = true
}
tasks.getByName("jar") {
    enabled = false
}

// test tasks
tasks.test {
    useJUnitPlatform()
    ignoreFailures = false
}
